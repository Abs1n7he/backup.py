import json
import sys
import requests
import urllib3
urllib3.disable_warnings()
import xml.etree.ElementTree as ET

def ecd(str):
    return str.replace('<','&lt;').replace('>','&gt;')

def json_or_xml_body(headers,body):
    if 'Content-Type' in headers.keys():
        if 'json' in headers['Content-Type'] and body.startswith('{'):
            return json.dumps(json.loads(body), indent=4, ensure_ascii=False, sort_keys=False,separators=(',', ';'))
        elif 'xml' in headers['Content-Type'] and body.startswith('<'):
            return printXML(body).replace('ns0:','')
        else:
            return '\n'+body

def str_to_json(str):
    dict1={}
    for i in str.split('\n'):
        dict1[i.partition(':')[0].strip()]=i.partition(':')[2].strip()
    return dict(filter(lambda x: x[0]!='',dict1.items())) #删除空key

def json_to_str(dict):
    return ''.join([key+': '+value+'\n' for key,value in dict.items()])




def str_to_cookie(str):
    dict1={}
    for i in str.split(';'):
        dict1[i.partition('=')[0].strip()]=i.partition('=')[2].strip()
    return dict(filter(lambda x: x[0]!='',dict1.items())) #删除空key

def cookie_to_str(dict):
    return '; '.join([key+'='+value for key,value in dict.items()])



def printXML(str):          # XML 字符串格式化打印
    # 创建XML元素
    element = ET.XML(str)
    # 使用indent()函数进行格式化打印
    ET.indent(element)
    return ET.tostring(element, encoding='unicode')
    
def GetRequest(http,req): #从字符串获取请求内容
    method= req.partition(' ')[0].strip().lower()
    if method not in  ['get', 'options', 'delete','head','post', 'put']:
        return False,'请求方式错误','','','','','','',''
    path=   req.partition(' ')[2].partition(' ')[0].strip()
    host=   req.partition('\n')[2].partition('\n')[0].partition(':')[2].strip()
    url = http + "://" + host + path
    headers=req.partition('\n')[2].partition('\n')[2].partition('\n\n')[0].strip()
    dict_headers = str_to_json(headers)
    body = req.partition('\n\n')[2]
    if 'Content-Type' in dict_headers.keys() and 'json' in dict_headers['Content-Type'] and body.strip().startswith('{'):
        isjson=True
        body = json.loads(body)
    else:
        isjson=False
    if not (method and path and host):#缺失告警
        return False,method,path,host,url,headers,dict_headers,isjson,body
    else:
        return True,method,path,host,url,headers,dict_headers,isjson,body

def GetResponse(method,url,dict_headers,isjson,body,proxies):
    try:
        if method in ['get', 'options', 'delete','head']:
            res = eval('requests.' + method + '(url,headers=dict_headers,timeout=20,verify=False,proxies=proxies,allow_redirects=False)')
        elif method in ['post', 'put']:
            if isjson:
                res = eval('requests.' + method + '(url,headers=dict_headers,json=body,timeout=20,verify=False,proxies=proxies,allow_redirects=False)')
            else:
                res = eval('requests.' + method + '(url,headers=dict_headers,data=body,timeout=20,verify=False,proxies=proxies,allow_redirects=False)')
        else:#请求方式错误告警
            return False
    except:
        return False
    return res